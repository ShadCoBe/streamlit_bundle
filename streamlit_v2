# LAUNCH_app.py — subprocess + env propre
import os, sys, subprocess, shlex

def resource_path(rel: str) -> str:
    base = getattr(sys, "_MEIPASS", os.path.dirname(os.path.abspath(__file__)))
    return os.path.join(base, rel)

if __name__ == "__main__":
    base = getattr(sys, "_MEIPASS", os.path.dirname(os.path.abspath(__file__)))
    os.chdir(base)

    app_path = resource_path("app.py")

    flags = {
        "server.headless": "true",
        "server.address": "127.0.0.1",
        "server.port": "8502",
        "browser.gatherUsageStats": "false",
        "server.runOnSave": "false",
        "server.fileWatcherType": "none",
        "server.enableCORS": "false",
        "server.enableXsrfProtection": "false",
    }
    cli_flags = " ".join(f"--{k}={v}" for k, v in flags.items())

    # Env propre: limite le PYTHONPATH et passe un marqueur à l'app
    env = os.environ.copy()
    env["PYTHONPATH"] = base
    env["STREAMLIT_LAUNCHED_FROM_EXE"] = "1"

    cmd = f"{shlex.quote(sys.executable)} -m streamlit run {shlex.quote(app_path)} {cli_flags}"
    try:
        subprocess.run(cmd, check=True, shell=False, cwd=base, env=env)
    except subprocess.CalledProcessError as e:
        print("Erreur de lancement Streamlit:", e)
        sys.exit(e.returncode)
